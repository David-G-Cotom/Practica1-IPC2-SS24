/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package frontend.model;

import backend.data.ListadoSolicitudesDB;
import backend.enums.EstadosSolicitud;
import backend.model.Bancario;
import backend.model.ListadoSolicitudes;
import backend.enums.TipoTarjetas;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carlos Cotom
 */
public class JIFListadoSolicitudes extends javax.swing.JInternalFrame {

    private final DefaultTableModel modeloTabla;
    private Bancario bancario;

    /**
     * Creates new form JIFListadoSolicitudes
     */
    public JIFListadoSolicitudes() {
        this.modeloTabla = new DefaultTableModel();
        initComponents();
        this.bancario = new Bancario();
        iniciarTablero();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListadoSolicitudes = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        cmbEstadoSolicitud = new javax.swing.JComboBox<>();
        txtFechaInicio = new javax.swing.JTextField();
        txtSalarioMinimo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtFechaFin = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnConsultar = new javax.swing.JButton();
        cmbTiposTarjeta = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Listado de Solicitudes Recibidas para Nuevas Tarjetas");

        jLabel3.setText("Estado de la Solicitud:");

        tblListadoSolicitudes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Numero de Solicitud", "Fecha de Ultimo Estado", "Tipo de Tarjeta", "Nombre del Cliente", "Salario del Cliente", "Direccion del Cliente", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListadoSolicitudes);

        jLabel4.setText("Fecha Inicio:");

        cmbEstadoSolicitud.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "APROBADA", "RECHAZADA", "" }));

        jLabel5.setText("Fecha Fin:");

        jLabel1.setText("Tipo de Tarjeta:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Formato fecha: dd/mm/aaaa");

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        cmbTiposTarjeta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NACIONAL", "REGIONAL", "INTERNACIONAL", "" }));

        jLabel2.setText("Salario Minimo del Cliente:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnConsultar)
                                        .addGap(90, 90, 90))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(356, 356, 356)))
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(53, 53, 53)
                                .addComponent(cmbTiposTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSalarioMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel8))
                            .addComponent(cmbEstadoSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtSalarioMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTiposTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbEstadoSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConsultar)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //---------------------------------------- METODOS DE EVENTO ----------------------------------------//
    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (camposValidos()) {
            double montoLimite;
            ListadoSolicitudes filtro;
            if (this.bancario.isDouble(this.txtSalarioMinimo.getText())) {
                montoLimite = Double.parseDouble(this.txtSalarioMinimo.getText());
            } else {
                montoLimite = -1;
            }
            filtro = new ListadoSolicitudes(this.txtFechaInicio.getText(), this.txtFechaFin.getText(), montoLimite);
            if (this.bancario.isTipoTarjetaValido(this.cmbTiposTarjeta.getItemAt(this.cmbTiposTarjeta.getSelectedIndex()))) {
                filtro.setTipoTarjeta(TipoTarjetas.valueOf(this.cmbTiposTarjeta.getItemAt(this.cmbTiposTarjeta.getSelectedIndex())));
                filtro.setHayTipoTarjeta(true);
            } else {
                filtro.setHayTipoTarjeta(false);
            }
            if (this.bancario.isEstadoSolicitudValido(this.cmbEstadoSolicitud.getItemAt(this.cmbEstadoSolicitud.getSelectedIndex()))) {
                filtro.setEstadoSolicitud(EstadosSolicitud.valueOf(this.cmbEstadoSolicitud.getItemAt(this.cmbEstadoSolicitud.getSelectedIndex())));
                filtro.setHayEstadoSolicitud(true);
            } else {
                filtro.setHayEstadoSolicitud(false);
            }
            if (this.bancario.verificarFiltroListadoSolicitudes(filtro)) {
                String restoQuery = filtro.filtrarDatos();
                ListadoSolicitudesDB listadoSolicitudes = new ListadoSolicitudesDB();
                ArrayList<ListadoSolicitudes> datos = listadoSolicitudes.getListadoSolicitudes(restoQuery);
                if (datos.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "No hay Datos por Mostrar");
                    vaciarTabla();
                    vaciarCampos();
                    return;
                }
                llenarTabla(datos);
                vaciarCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Consulta de Listado de Solicitudes NO Valido para su Ejecucion. Vuelva a revisar los Campos Rellenados");
            }
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    //---------------------------------------- METODOS PROPIOS ----------------------------------------//
    /**
     * Metodo que evalua cada campo del formulario para verificar que esten
     * completos y de ser asi verificar que sean datos correctos
     *
     * @return verdadero si los campos del formulario son validos, de los
     * contrario retorna falso
     */
    private boolean camposValidos() {
        if (this.cmbEstadoSolicitud.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "No se seleccionó un tipo de Estado de Solicitud valido", "Error!!!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (this.cmbTiposTarjeta.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "No se seleccionó un tipo de Tarjeta valido", "Error!!!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (!this.txtSalarioMinimo.getText().equals("") && !this.bancario.isDouble(this.txtSalarioMinimo.getText())) {
            JOptionPane.showMessageDialog(this, "El valor ingresado en el Campo de Salario Minimo no es Valido", "Error!!!", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * Metodo que muestra en la Tabla de la interfaz los datos de cada Solicitud
     * que esta en el Array recibido como parametro
     *
     * @param datos son los datos de cada solicitud registrarda en sistema
     */
    private void llenarTabla(ArrayList<ListadoSolicitudes> datos) {
        vaciarTabla();
        Object[] fila;
        for (int i = 0; i < datos.size(); i++) {
            fila = new Object[7];
            fila[0] = datos.get(i).getNumeroSolicitud();
            fila[1] = datos.get(i).getFechaCambioEstado();
            fila[2] = datos.get(i).getTipoTarjeta();
            fila[3] = datos.get(i).getNombreCliente();
            fila[4] = datos.get(i).getSalarioCliente();
            fila[5] = datos.get(i).getDireccionCliente();
            fila[6] = datos.get(i).getEstadoSolicitud();
            this.modeloTabla.addRow(fila);
        }
        JOptionPane.showMessageDialog(this, "Consulta Exitosa!!!");
    }

    /**
     * Metodo que limpia la Tabla de la Interfaz para no tener problemas de
     * colapsos
     */
    private void vaciarTabla() {
        this.tblListadoSolicitudes.removeAll();
        int filasTabla = this.modeloTabla.getRowCount();
        if (filasTabla != 0) {
            for (int i = 0; i < filasTabla; i++) {
                this.modeloTabla.removeRow(0);
            }
        }
    }

    /**
     * Metodo que limpia los campos en donde se ingresaron los datos para la
     * busqueda
     */
    private void vaciarCampos() {
        this.txtFechaFin.setText("");
        this.txtFechaInicio.setText("");
        this.txtSalarioMinimo.setText("");
    }

    /**
     * Metodo que le da a la Tabla de la interfaz el modelo adecuado para su
     * visualizacion
     */
    private void iniciarTablero() {
        this.tblListadoSolicitudes.setModel(modeloTabla);
        this.modeloTabla.addColumn("Numero de Solicitud");
        this.modeloTabla.addColumn("Fecha de Ultimo Estado");
        this.modeloTabla.addColumn("Tipo Tarjeta");
        this.modeloTabla.addColumn("Nombre del Clente");
        this.modeloTabla.addColumn("Salario del Cliente");
        this.modeloTabla.addColumn("Direccion del Cliente");
        this.modeloTabla.addColumn("Estado");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JComboBox<String> cmbEstadoSolicitud;
    private javax.swing.JComboBox<String> cmbTiposTarjeta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblListadoSolicitudes;
    private javax.swing.JTextField txtFechaFin;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtSalarioMinimo;
    // End of variables declaration//GEN-END:variables
}
